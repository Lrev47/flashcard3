<!-- /src/features/flashCards/templates/layouts/layout2.ejs -->
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Flashcard PDF (3×5 layout)</title>

  <!-- Highlight.js theme CSS -->
  <style><%- themeCSS %></style>

  <style>
    @page {
      size: Letter;
      margin: 0;
    }
    html, body {
      margin: 0;
      padding: 0;
      width: 8.5in;
      height: 11in;
      font-family: Arial, sans-serif;
    }

    .page {
      position: relative;
      width: 8.5in;
      height: 11in;
      page-break-after: always;
      page-break-inside: avoid;
      overflow: hidden;
    }

    /*
      We’ll place exactly 3 cards per page:
        - 2 cards on the top row
        - 1 card on the second row (left side).
      Each final 3×5 card is rotated so that from the page’s
      perspective, the “card slot” is 3in wide × 5in tall.

      Let’s position them like this:
        - card-slot1 => top: 0.5in; left: 1in
        - card-slot2 => top: 0.5in; left: 4in
        - card-slot3 => top: 5.5in; left: 1in

      Then for the back, we swap columns for the top row 
      so they align correctly when duplex-printed and flipped:
        - card-slot1 => top: 0.5in; left: 4in
        - card-slot2 => top: 0.5in; left: 1in
        - card-slot3 => top: 5.5in; left: 4in
    */

    .card-slot {
      position: absolute;
      width: 3in;  /* unrotated width */
      height: 5in; /* unrotated height */
      page-break-inside: avoid;
      overflow: hidden;
      border: 1px dashed #333; /* Added dashed border to visualize the grid */
      box-sizing: border-box;
    }

    /* Front side positions (3 slots) */
    .card-slot1 { top: 0.5in; left: 1in; }
    .card-slot2 { top: 0.5in; left: 4in; }
    .card-slot3 { top: 5.5in; left: 1in; }

    /* Rotated card for the “front”: -90° so it becomes 3 wide × 5 tall final */
    .rotated-card {
      width: 5in;
      height: 3in;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(-90deg);
      transform-origin: center center;
      page-break-inside: avoid;
    }

    /* Back side is rotated +90°, columns swapped for alignment */
    .page-back .rotated-card {
      transform: translate(-50%, -50%) rotate(90deg);
    }
    .page-back .card-slot1 { top: 0.5in; left: 4in; }
    .page-back .card-slot2 { top: 0.5in; left: 1in; }
    .page-back .card-slot3 { top: 5.5in; left: 4in; }
  </style>
</head>
<body>

<%
  // Function to safely fetch card by index
  function getCard(cards, index) {
    return (index >= 0 && index < cards.length) ? cards[index] : null;
  }

  // Chunk the cards in groups of 3
  for (let i = 0; i < cards.length; i += 3) {
    const c0 = getCard(cards, i + 0);
    const c1 = getCard(cards, i + 1);
    const c2 = getCard(cards, i + 2);
%>

<!-- FRONT PAGE of this 3-card chunk -->
<div class="page">
  <div class="card-slot card-slot1">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'front', card: c0, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot2">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'front', card: c1, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot3">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'front', card: c2, highlightCode }) %>
    </div>
  </div>
</div>

<!-- BACK PAGE of this 3-card chunk -->
<div class="page page-back">
  <div class="card-slot card-slot1">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'back', card: c0, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot2">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'back', card: c1, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot3">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'back', card: c2, highlightCode }) %>
    </div>
  </div>
</div>

<% } %>

</body>
</html>
