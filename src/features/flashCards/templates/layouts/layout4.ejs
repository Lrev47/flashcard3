<!-- /src/features/flashCards/templates/layouts/layout4.ejs -->
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <title>Flashcard PDF (5×7 layout)</title>

  <style><%- themeCSS %></style>

  <style>
    @page {
      size: Letter;
      margin: 0;
    }
    html, body {
      margin: 0;
      padding: 0;
      width: 8.5in;
      height: 11in;
      font-family: Arial, sans-serif;
    }

    .page {
      position: relative;
      width: 8.5in;
      height: 11in;
      page-break-after: always;
      page-break-inside: avoid;
      overflow: hidden;
    }

    /*
      5×7 card is quite large. We'll do 2 per page:
      top half + bottom half.
      We rotate each card so it fits horizontally (7 wide × 5 tall).
      So the .card-slot is 7in wide × 5in tall,
      inside is a .rotated-card of 5in × 7in rotated -90°.
    */

    .card-slot {
      position: absolute;
      width: 7in;
      height: 5in;
      page-break-inside: avoid;
      overflow: hidden;
    }
    /* We’ll do 0.5in margin top, so first card is at top=0.5in, 
       second at top=5.8in (some spacing). Or we can do 0.5in gap. 
    */
    .card-slot1 { top: 0.5in; left: 0.75in; }
    .card-slot2 { top: 5.8in; left: 0.75in; }
    /* 
      This means horizontally we have 7in for the card + 1.5in leftover 
      => 0.75in on each side as margin (total 0.75 + 7 + 0.75 = 8.5). 
    */

    /* Rotate front side -90° so final is 5"W × 7"H. */
    .rotated-card {
      width: 5in;
      height: 7in;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(-90deg);
      transform-origin: center center;
      page-break-inside: avoid;
    }

    /* The back side is +90°, and we swap card-slot positions for correct alignment. */
    .page-back .rotated-card {
      transform: translate(-50%, -50%) rotate(90deg);
    }
    .page-back .card-slot1 { top: 0.5in; left: 0.75in; }
    .page-back .card-slot2 { top: 5.8in; left: 0.75in; }
    /* 
      For 2 cards, we actually might not need to swap them horizontally 
      because they are physically the same positions. 
      If you want to ensure correct flipping alignment, 
      you might mirror them, but typically with 2 big cards it’s simpler 
      just to keep them same so front/back line up.
    */
  </style>
</head>
<body>

<%
  // 2 cards per chunk
  function getCard(cards, idx) {
    return (idx >= 0 && idx < cards.length) ? cards[idx] : null;
  }

  for (let i = 0; i < cards.length; i += 2) {
    const c0 = getCard(cards, i + 0);
    const c1 = getCard(cards, i + 1);
%>

<!-- FRONT (2 cards) -->
<div class="page">
  <div class="card-slot card-slot1">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'front', card: c0, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot2">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'front', card: c1, highlightCode }) %>
    </div>
  </div>
</div>

<!-- BACK (2 cards) -->
<div class="page page-back">
  <div class="card-slot card-slot1">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'back', card: c0, highlightCode }) %>
    </div>
  </div>
  <div class="card-slot card-slot2">
    <div class="rotated-card">
      <%- include('../designs/' + style + '.ejs', { side: 'back', card: c1, highlightCode }) %>
    </div>
  </div>
</div>

<% } %>

</body>
</html>
